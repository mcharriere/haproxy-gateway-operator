apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: haproxy-operator
  name: haproxy-operator
  namespace: haproxy-operator-system
spec:
  selector:
    matchLabels:
      app: haproxy-operator
  template:
    metadata:
      labels:
        app: haproxy-operator
    spec:
      initContainers:
      - name: init-config
        image: busybox:1.28
        command: ['sh', '-c', "cp /default-config/haproxy.cfg /config"]
        volumeMounts:
        - name: config
          mountPath: "/config"
        - name: default-config
          mountPath: "/default-config"
      containers:
      - name: haproxy-operator
        image: haproxytech/haproxy-alpine:2.5
        resources:
          requests:
            cpu: "1"
            memory: "500Mi"
        ports:
        - name: http
          containerPort: 80
          hostPort: 8080
        - name: dataplane
          containerPort: 5555
          hostPort: 5555
        - name: stats
          containerPort: 9500
          hostPort: 9500
        volumeMounts:
        - name: config
          mountPath: "/usr/local/etc/haproxy"
      volumes:
        # You set volumes at the Pod level, then mount them into containers inside that Pod
        - name: config
          emptyDir: {}
        - name: default-config
          configMap:
            # Provide the name of the ConfigMap you want to mount.
            name: haproxy-operator-defaultconfig

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-operator-defaultconfig
  namespace: haproxy-operator-system
data:
  # property-like keys; each key maps to a simple value
  haproxy.cfg: |
    global
      daemon
      maxconn 50000

    defaults
      mode http
      timeout connect 50s
      timeout client 900s
      timeout server 900s

    userlist dataplaneapi
      user admin insecure-password securePassword

    frontend http
      bind *:80

    backend default
      balance roundrobin
      # option httpchk GET /v1/sys/health
      server black_page blank.org:443 maxconn 5000 weight 1

    program api
      command /usr/bin/dataplaneapi --host 0.0.0.0 --port 5555 --haproxy-bin /usr/sbin/haproxy --config-file /usr/local/etc/haproxy/haproxy.cfg --reload-cmd "kill -SIGUSR2 1" --reload-delay 5 --userlist dataplaneapi
      no option start-on-reload
